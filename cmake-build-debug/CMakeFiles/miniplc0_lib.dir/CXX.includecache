#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

../error/error.h
cstdint
-
iostream
-
string
-
utility
-

../instruction/instruction.h
cstdint
-
utility
-

../tokenizer/token.h
any
-
cstdint
-
string
-
error/error.h
../tokenizer/error/error.h

../tokenizer/tokenizer.h
cstdint
-
iostream
-
memory
-
optional
-
string
-
utility
-
vector
-
error/error.h
../tokenizer/error/error.h
tokenizer/token.h
../tokenizer/tokenizer/token.h
tokenizer/utils.hpp
../tokenizer/tokenizer/utils.hpp

../tokenizer/utils.hpp
cctype
-

F:/jiao_now/CProjects/miniplc0-compiler/analyser/analyser.cpp
analyser.h
F:/jiao_now/CProjects/miniplc0-compiler/analyser/analyser.h
climits
-

F:/jiao_now/CProjects/miniplc0-compiler/analyser/analyser.h
cstddef
-
cstdint
-
map
-
optional
-
utility
-
vector
-
error/error.h
F:/jiao_now/CProjects/miniplc0-compiler/analyser/error/error.h
instruction/instruction.h
F:/jiao_now/CProjects/miniplc0-compiler/analyser/instruction/instruction.h
tokenizer/token.h
F:/jiao_now/CProjects/miniplc0-compiler/analyser/tokenizer/token.h

F:/jiao_now/CProjects/miniplc0-compiler/tokenizer/tokenizer.cpp
tokenizer/tokenizer.h
F:/jiao_now/CProjects/miniplc0-compiler/tokenizer/tokenizer/tokenizer.h
cctype
-
sstream
-

